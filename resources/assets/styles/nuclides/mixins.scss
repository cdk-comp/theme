@mixin media($min-query: null, $max-query: null) {
  @if $min-query == null and $max-query == null {
    @warn "Mixin k-media() received two null values; no output.";
    @content; // Pass content anyway, but it won't be wrapped in a media query
  }
  @else if $max-query == null {
    @media screen and (min-width: $min-query+0px) { @content; }
  }
  @else if $min-query == null {
    @media screen and (max-width: $max-query+0px) { @content; }
  }
  @else {
    @media screen and (min-width: $min-query+0px) and (max-width: $max-query+0px) { @content; }
  }
}

/**
 * @mixin media-above
 * @section Media Query Mixins
 * @param $min-query Min media query
 *
 * @example
 *  @include media-above(1024px)
 */
@mixin media-above($min-query) {
  @include media($min-query, null) { @content; }
}

/**
 * @mixin media-below
 * @section Media Query Mixins
 * @param $max-query Min media query
 *
 * @example
 *  @include media-below(1024px)
 */
@mixin media-below($max-query) {
  @include media(null, $max-query - 1) { @content; }
}

/**
 * @mixin media-between
 * @section Media Query Mixins
 * @param $min-query Min media query
 * @param $max-query Max media query
 *
 * @example
 *  @include media-between(320px, 1024px)
 */
@mixin media-between($min-query: null, $max-query: null) {
  @if $min-query == null or $max-query == null {
    @warn "Mixin media-between() received a null value."
  }
  @include media($min-query, $max-query - 1) { @content; }
}


@mixin burger($width: 30px, $height: 5px, $gutter: 3px, $color: #000, $border-radius: 0, $transition-duration: .3s) {
  $burger-height: $height !global;
  $burger-gutter: $gutter !global;

  position: relative;
  margin-top: $height + $gutter;
  margin-bottom: $height + $gutter;
  user-select: none;

  &, &::before, &::after {
    display: block;
    width: $width;
    height: $height;
    background-color: $color;
    @if $border-radius != 0 {
      border-radius: $border-radius;
    }

    transition-property: background-color, transform;
    transition-duration: $transition-duration;
  }

  &::before, &::after {
    position: absolute;
    content: "";
  }

  &::before {
    top: -($height + $gutter);
  }

  &::after {
    top: $height + $gutter;
  }
}

// Burger animations
@mixin burger-to-cross($color: auto) {
  & {
    background-color: transparent;
  }
  @if ($color != auto) {
    &::before, &::after {
      background-color: $color;
    }
  }
  &::before {

    transform: translateY($burger-gutter + $burger-height) rotate(45deg);
  }
  &::after {

    transform: translateY(-($burger-gutter + $burger-height)) rotate(-45deg);
  }
}